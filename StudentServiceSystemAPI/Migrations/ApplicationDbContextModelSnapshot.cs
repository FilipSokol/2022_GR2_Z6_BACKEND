// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentServiceSystemAPI.Data;

#nullable disable

namespace StudentServiceSystemAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Address = "Address1",
                            City = "City 1",
                            Name = "Department1",
                            PostalCode = "PostalCode 1"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Address = "Address2",
                            City = "City 2",
                            Name = "Department2",
                            PostalCode = "PostalCode 2"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Address = "Address3",
                            City = "City 3",
                            Name = "Department3",
                            PostalCode = "PostalCode 3"
                        });
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            DepartmentId = 1,
                            Name = "Group 1"
                        },
                        new
                        {
                            GroupId = 2,
                            DepartmentId = 3,
                            Name = "Group 2"
                        },
                        new
                        {
                            GroupId = 3,
                            DepartmentId = 2,
                            Name = "Group 3"
                        });
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkId"), 1L, 1);

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MarkValue")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("MarkId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            FirstName = "Jan",
                            GroupId = 1,
                            LastName = "Kowalski"
                        },
                        new
                        {
                            StudentId = 2,
                            FirstName = "Adam",
                            GroupId = 2,
                            LastName = "Nowak"
                        },
                        new
                        {
                            StudentId = 3,
                            FirstName = "Arek",
                            GroupId = 3,
                            LastName = "Kedziora"
                        });
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ECTS")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("WeekDaysId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("WeekDaysId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.WeekDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("WeekDays");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Group", b =>
                {
                    b.HasOne("StudentServiceSystemAPI.Models.Department", "Department")
                        .WithMany("Groups")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Mark", b =>
                {
                    b.HasOne("StudentServiceSystemAPI.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentServiceSystemAPI.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Schedule", b =>
                {
                    b.HasOne("StudentServiceSystemAPI.Models.Group", "Group")
                        .WithOne("Schedule")
                        .HasForeignKey("StudentServiceSystemAPI.Models.Schedule", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Student", b =>
                {
                    b.HasOne("StudentServiceSystemAPI.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Subject", b =>
                {
                    b.HasOne("StudentServiceSystemAPI.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentServiceSystemAPI.Models.WeekDays", null)
                        .WithMany("Subjects")
                        .HasForeignKey("WeekDaysId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.WeekDays", b =>
                {
                    b.HasOne("StudentServiceSystemAPI.Models.Schedule", null)
                        .WithMany("WeekDays")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Department", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Group", b =>
                {
                    b.Navigation("Schedule")
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Schedule", b =>
                {
                    b.Navigation("WeekDays");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.Student", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("StudentServiceSystemAPI.Models.WeekDays", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
